// Effect Syntax Guide: https://docs.cocos.com/creator/manual/zh/shader/index.html

CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: unlit-vs:vert # builtin header
      frag: unlit-fs:depth_32bits
      properties: &props

  - name: transparent
    passes:
    - vert: unlit-vs:vert # builtin header
      frag: unlit-fs:depth_32bits
      blendState:
        targets:
        - blend: true
          blendSrc: src_alpha
          blendDst: one_minus_src_alpha
          blendSrcAlpha: src_alpha
          blendDstAlpha: one_minus_src_alpha
      properties: *props
}%

CCProgram unlit-vs %{
  precision highp float;
  #include <legacy/input-standard>
  #include <builtin/uniforms/cc-global>
  #include <legacy/local-batch>
  #include <legacy/input-standard>

  out vec4 v_screenPos;

  vec4 vert () {
    StandardVertInput In;
    CCVertInput(In);

    mat4 matWorld, matWorldIT;
    CCGetWorldMatrixFull(matWorld, matWorldIT);

    v_screenPos = cc_matProj * (cc_matView * matWorld) * In.position;
    return v_screenPos;
  }
}%

CCProgram unlit-fs %{
  precision highp float;
  #include <legacy/output>
  #include <common/data/packing> 

  in vec4 v_screenPos;

  vec4 depth_8bits(){
    float depth = v_screenPos.z / v_screenPos.w * 0.5 + 0.5;
    vec4 col = vec4(depth, depth, depth, 1.0);
    return CCFragOutput(col);
  }


  vec4 depth_32bits () {
    float depth = v_screenPos.z / v_screenPos.w * 0.5 + 0.5;
    vec4 col = packDepthToRGBA(depth); 
    return CCFragOutput(col);
  }
}%
